class MatrixCharactor16px:
    """16x16サイズの文字定義クラス"""

    __PT_ASCII = {
        " ": [
            0b0000000000000000,
            0b0000000000000000,
            0b0000000000000000,
            0b0000000000000000,
            0b0000000000000000,
            0b0000000000000000,
            0b0000000000000000,
            0b0000000000000000,
            0b0000000000000000,
            0b0000000000000000,
            0b0000000000000000,
            0b0000000000000000,
            0b0000000000000000,
            0b0000000000000000,
            0b0000000000000000,
            0b0000000000000000,
        ],
        "!": [],
        "-": [],
        "?": [],
        "A": [],
        "B": [],
    }
    """アスキー文字のビットパターン辞書"""

    __PT_HIRAGANA = {
        "あ": [],
        "い": [],
        "か": [],
        "た": [],
        "ひ": [],
        "や": [],
        "し": [],
        "す": [],
        "め": [],
        "り": [],
        "ま": [],
    }
    """ひらがなのビットパターン辞書"""

    __PT_KATAKANA = {
        "カ": [],
        "ビ": [],
        "ル": [],
        "レ": [],
    }
    """カタカナのビットパターン辞書"""

    __PT_ZENKAKU_KIGOU = {
        "ー": [],
        "～": [],
        "。": [],
    }
    """全角記号のビットパターン辞書"""

    __PT_KANJI = {
        "始": [],
    }
    """漢字のビットパターン辞書"""

    def get_pattern(self, key: str) -> list[int]:
        """文字のビットパターンを取得する

        Args:
            key (str): 文字
        """
        return self.__PETTERN.get(key)
